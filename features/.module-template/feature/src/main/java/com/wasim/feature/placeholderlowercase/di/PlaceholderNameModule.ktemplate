/*
 * Copyright 2023 Wasim Reza.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.wasim.feature.@placeholderlowercase@.di

import dagger.Binds
import dagger.Module
import dagger.Provides
import dagger.hilt.InstallIn
import dagger.hilt.android.components.ViewModelComponent
import javax.inject.Singleton
import com.wasim.feature.@placeholderlowercase@.domain.usecase.@PlaceholderName@UseCaseImpl
import com.wasim.@placeholderlowercase@.domain.usecase.@PlaceholderName@UseCase
import com.wasim.@placeholderlowercase@.domain.repository.@PlaceholderName@Repository
import com.wasim.feature.@placeholderlowercase@.data.repository.@PlaceholderName@RepositoryImpl
import com.wasim.feature.@placeholderlowercase@.presentation.launcher.@PlaceholderName@LauncherImpl
import com.wasim.@placeholderlowercase@.presentation.@PlaceholderName@Launcher
import javax.inject.Singleton
import dagger.hilt.android.scopes.ViewModelScoped

@Module
@InstallIn(ViewModelComponent::class)
interface @PlaceholderName@DomainModule {
    @Binds
    fun bind@PlaceholderName@Repository(repository: @PlaceholderName@RepositoryImpl): @PlaceholderName@Repository

    @Binds
    @ViewModelScoped
    fun bind@PlaceholderName@UseCase(useCase: @PlaceholderName@UseCaseImpl): @PlaceholderName@UseCase
}

@Module
@InstallIn(SingletonComponent::class)
interface @PlaceholderName@PresentationModule {
    @Binds
    fun bindLauncher(launcher: @PlaceholderName@LauncherImpl): @PlaceholderName@Launcher
}
